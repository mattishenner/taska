{"mappings":"AAAA,MAAM,eAAe,SAAS,eAAe;AAC7C,MAAM,aAAa,SAAS,eAAe;AAC3C,MAAM,WAAW,SAAS,cAAc;AACxC,MAAM,iBAAiB,SAAS,eAAe;AAE/C,YAAY;AACZ,IAAI,YAAY;IACZ;QACI,MAAM;QACN,UAAU;QACV,MAAM;QACN,eAAe;IACnB;IACA;QACI,MAAM;QACN,UAAU;QACV,MAAM;QACN,eAAe;IACnB;CACH;AAED,kBAAkB;AAClB,SAAS;IACL,MAAM,MAAM,IAAI;IAChB,YAAY,UAAU,OAAO,CAAC;QAC1B,IAAI,KAAK,QAAQ,KAAK,eAAe;YACjC,MAAM,gBAAgB,IAAI,KAAK,KAAK;YACpC,MAAM,uBAAuB,AAAC,CAAA,MAAM,aAAY,IAAM;YACtD,IAAI,wBAAwB,IACxB,OAAO;QAEf;QACA,OAAO;IACX;IACA;AACJ;AAEA,cAAc;AACd,SAAS;IACL,SAAS,YAAY;IACrB,UAAU,QAAQ,CAAC,MAAM;QACrB,MAAM,KAAK,SAAS,cAAc;QAClC,GAAG,YAAY,KAAK;QACpB,IAAI,KAAK,MACL,GAAG,UAAU,IAAI;QAGrB,IAAI,KAAK,aAAa,GAClB,GAAG,UAAU,IAAI;aACd,IAAI,KAAK,aAAa,GACzB,GAAG,UAAU,IAAI;aACd,IAAI,KAAK,aAAa,GACzB,GAAG,UAAU,IAAI;QAGrB,iCAAiC;QACjC,GAAG,iBAAiB,SAAS;YACzB,KAAK,OAAO,CAAC,KAAK;YAClB,IAAI,KAAK,MACL,KAAK,gBAAgB,IAAI;iBAEzB,KAAK,gBAAgB;YAEzB;QACJ;QACA,SAAS,YAAY;IACzB;AACJ;AAGA,iBAAiB;AACjB,YAAY,iBAAiB,SAAS,CAAC;IACnC,MAAM;IACN,UAAU,KAAK;QACX,MAAM,aAAa;QACnB,MAAM;QACN,eAAe;QACf,UAAU,OAAO,eAAe;IACpC;IACA,QAAQ,IAAI,eAAe;IAC3B;IACA,aAAa,QAAQ;AACzB;AAGA,iBAAiB;AACjB,SAAS;IACL;IACA;IACA,YAAY,gBAAgB;AAChC;AACA,QAQA,qDAAqD;CACrD,8BAA8B;CAC9B,oDAAoD;CACpD,8CAA8C;CAC9C,qCAAqC;CACrC,+BAA+B;CAC/B,gDAAgD;CAChD,4CAA4C;CAC5C,UAAU;CACV,mDAAmD;CACnD,yCAAyC;CACzC,UAAU;CACV,MAAM","sources":["todo.js"],"sourcesContent":["const newTaskInput = document.getElementById('new-task-input');\nconst newTaskBtn = document.getElementById('new-task-btn');\nconst taskList = document.querySelector('.task-list');\nconst prioritySlider = document.getElementById('priority-slider');\n\n//To do list\nlet taskArray = [\n    {\n        task: 'Buy groceries',\n        priority: 3,\n        done: false,\n        completedDate: null\n    },\n    {\n        task: 'Do laundry',\n        priority: 1,\n        done: false,\n        completedDate: null\n    }\n];\n\n//Remove old tasks\nfunction removeOldTasks() {\n    const now = new Date();\n    taskArray = taskArray.filter((task) => {\n        if (task.done && task.completedDate) {\n            const completedDate = new Date(task.completedDate);\n            const hoursSinceCompletion = (now - completedDate) / (1000 * 60 * 60);\n            if (hoursSinceCompletion >= 12) {\n                return false;\n            }\n        }\n        return true;\n    });\n    renderTasks();\n};\n\n//Render tasks\nfunction renderTasks() {\n    taskList.innerHTML = \"\";\n    taskArray.forEach((task, index) => {\n        const li = document.createElement('li');\n        li.innerText = task.task;\n        if (task.done) {\n            li.classList.add('done');\n        }\n\n        if (task.priority === 3) {\n            li.classList.add('high-priority');\n        } else if (task.priority === 2) {\n            li.classList.add('medium-priority');\n        } else if (task.priority === 1) {\n            li.classList.add('low-priority');\n        }\n\n        //Add event listener to each task\n        li.addEventListener('click', () => {\n            task.done = !task.done;\n            if (task.done) {\n                task.completedDate = new Date();\n            } else {\n                task.completedDate = null;\n            }\n            renderTasks();\n        });\n        taskList.appendChild(li);\n    });\n}\n\n\n//Create new task\nnewTaskBtn?.addEventListener('click', (event) => {\n    event.preventDefault();\n    taskArray.push({\n        task: newTaskInput.value,\n        done: false,\n        completedDate: null,\n        priority: Number(prioritySlider.value)\n    });\n    console.log(prioritySlider.value);\n    renderTasks();\n    newTaskInput.value = '';\n});\n\n\n//Initialize list\nfunction init() {\n    removeOldTasks();\n    renderTasks();\n    setInterval(removeOldTasks, 1000 * 60 * 60);\n}\ninit();\n\n\n\n\n\n\n\n// newTaskBtn?.addEventListener('click', (event) => {\n//     event.preventDefault();\n//     const newTask = document.createElement('li');\n//     newTask.innerText = newTaskInput.value;\n//     taskList.appendChild(newTask);\n//     newTaskInput.value = '';\n//     newTask.addEventListener('click', () => {\n//         newTask.classList.toggle('done');\n//     });\n//     newTask.addEventListener('dblclick', () => {\n//         taskList.removeChild(newTask);\n//     });\n// });\n\n\n\n"],"names":[],"version":3,"file":"dashboard.77f2b47a.js.map","sourceRoot":"/__parcel_source_root/"}